To print a bill with details of each selected item and the total amount, and then send this to a small shop printer, you need to follow these steps:

Generate Printable Bill Content:
Create a formatted HTML or plain text representation of the bill.
Print the Bill:
Use a library or browser API to send the content to the printer.
Connect to the Printer:
Ensure your printer is correctly connected and configured.
Step-by-Step Solution
1. Generate Printable Bill Content
You need to format the bill's details into a printable form. Here's a simple example of how you might create the bill content:

javascript
Copy code
const generateBillContent = (items) => {
    let content = `<html><body><h1>Bill</h1><table border="1" cellpadding="5" cellspacing="0">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Discount</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>`;
    
    items.forEach(item => {
        content += `
            <tr>
                <td>${item.name}</td>
                <td>${item.price}</td>
                <td>${item.quantity}</td>
                <td>${item.discount}</td>
                <td>${item.total}</td>
            </tr>`;
    });
    
    const totalAmount = items.reduce((acc, item) => acc + item.total, 0);
    
    content += `
        </tbody>
        <tfoot>
            <tr>
                <td colspan="4"><strong>Total</strong></td>
                <td><strong>${totalAmount}</strong></td>
            </tr>
        </tfoot>
    </table></body></html>`;
    
    return content;
};
2. Print the Bill
You can use the window.print() method for simple printing tasks, which will open the print dialog. For better control over the printing process, including printing directly to a receipt printer, you might use libraries such as react-to-print for React apps or directly print via JavaScript.

Here’s a simple approach using window.print():

javascript
Copy code
const printBill = (billContent) => {
    const printWindow = window.open('', '', 'height=600,width=800');
    printWindow.document.write(billContent);
    printWindow.document.close();
    printWindow.focus();
    printWindow.print();
};
3. Connect to the Printer
Connecting to the Printer:

Ensure Printer Setup: Make sure your printer is connected to your computer or network and is properly set up.

Printer Configuration: If using a receipt printer, ensure it is compatible with your system and has the correct drivers installed.

Use Printer-Specific Libraries: For direct printer communication, especially for POS printers, you might need a specific library or API. Libraries like escpos for JavaScript can be used if you are working with ESC/POS compatible receipt printers.

Here’s an example of how you might use escpos (for Node.js, not directly in a browser):

javascript
Copy code
const escpos = require('escpos');
const device = new escpos.USB();
const printer = new escpos.Printer(device);

device.open(function() {
    printer
        .text('Bill')
        .table([['Name', 'Price', 'Quantity', 'Discount', 'Total']])
        .table(items.map(item => [
            item.name,
            item.price,
            item.quantity,
            item.discount,
            item.total
        ]))
        .text(`Total: ${totalAmount}`)
        .close();
});
Example Integration in React Component
Here’s how you might integrate the printBill function in your NewOrder component:

javascript
Copy code
import React, { useState, useEffect, useRef } from 'react';
import { useQuery } from '@apollo/client';
import { GET_ITEMS } from '../gqloperations/queries.jsx';
import client from '../apolloClient.js';

const NewOrder = () => {
    // ... other state and methods

    const generateBillContent = (items) => {
        // Function definition from above
    };

    const printBill = (billContent) => {
        const printWindow = window.open('', '', 'height=600,width=800');
        printWindow.document.write(billContent);
        printWindow.document.close();
        printWindow.focus();
        printWindow.print();
    };

    const handlePrintBill = () => {
        const billContent = generateBillContent(selectedItems.map(item => ({
            name: item.name,
            price: item.price,
            quantity: item.quantity,
            discount: item.discount,
            total: item.total
        })));
        printBill(billContent);
    };

    return (
        <div className="flex flex-wrap">
            {/* ... other elements */}
            <div className='md:w-1/2 w-full p-2'>
                <button
                    className='ml-2 bg-orange-500 hover:bg-orange-400 text-white font-bold py-2 px-4 rounded'
                    onClick={handlePrintBill}
                >
                    Print Bill
                </button>
            </div>
        </div>
    );
};

// Item component stays the same

export default NewOrder;
Summary
Generate Bill Content: Format the bill details into HTML.
Print the Bill: Use window.print() for a simple solution or libraries for more control.
Connect to the Printer: Ensure the printer is set up correctly, and use appropriate libraries for direct printing if needed.
Make sure to test the printing functionality thoroughly, especially if working with receipt printers, to ensure compatibility and proper formatting.